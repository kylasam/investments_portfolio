name: 5Paisa data Scrapper

on:
  schedule:
    - cron: '0 0/1 * * *' # Every 1hr
  workflow_dispatch:
  
env:
  PROJECT_ID: kylash-edw
  SERVICE_NAME: default

defaults:
  run:
    shell: 'bash'
  
jobs:
  EDW_PORTFOLIO_BULDER:
    name : '_5Paisa_scrapper'
    runs-on: 'ubuntu-latest'

    steps:
    - name: CHECKOUT_REPO
      uses: 'actions/checkout@v3'

    - name: PYTHON_SETUP
      uses: actions/setup-python@v4
      with:
        python-version: '3.10' # install the python version needed

    - name: PYTHON_LIBRARY_SETUP
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: REST_API_5PAISA # run main.py
      run: |-
        echo "${{ secrets.GOOGLE_CREDENTIALS }}" | base64 -d > $GITHUB_WORKSPACE/key.json
        export GOOGLE_APPLICATION_CREDENTIALS=$GITHUB_WORKSPACE/key.json
        gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
        python main.py
        
    - name: DBT_RUN_STAGING_HOLDINGS
      run: |-
        pip install dbt
          
          # Authenticate with dbt Cloud (using your API key)
        JOB_ID=$(curl -X POST -H "Authorization: Bearer ${{ secrets.DBT_CLOUD_TOKEN }}" -H "Content-Type: application/json" -d '{}' https://cloud.getdbt.com/api/v2/accounts/"${{ env.DBT_ACCOUNT_ID }}"/runs | jq -r '.id')
          
          # Loop to check the status of the job every 30 seconds
        while true; do
          JOB_STATUS=$(curl -H "Authorization: Bearer ${{ secrets.DBT_CLOUD_TOKEN }}" https://cloud.getdbt.com/api/v2/accounts/"${{ env.DBT_ACCOUNT_ID }}"/runs/491294 | jq -r '.data.attributes.status')
            
          if [[ "$JOB_STATUS" == "success" ]]; then
            echo "Job status: Success"
            exit 0  # Job succeeded, exit with success
          elif [[ "$JOB_STATUS" == "error" || "$JOB_STATUS" == "cancelled" ]]; then
            echo "Job status: $JOB_STATUS"
            exit 1  # Job failed or cancelled, exit with failure
          else
            echo "Job status: $JOB_STATUS - Waiting..."
            sleep 30  # Check again after 30 seconds
          fi
        done

